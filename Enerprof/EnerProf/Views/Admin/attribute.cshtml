@model EnerProf.Models.AttributeModel
@using EnerProf.Models;
@{
    ViewBag.Title = "attribute";
    Layout = "~/Views/Admin/_AdminLayout.cshtml";
    List<Unit> units = ViewBag.Units;
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<h2>attribute</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>AttributeModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control", id="type"})
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Ordering, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ordering, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ordering, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div id="unit" class="row margin-bottom">
            <label>размерность</label>
            <select name="Unit">
                @if (Model.Unit != null)
                {
                    <option value="@Model.Unit.id">@Model.Unit.Name</option>
                }
                @foreach (var unit in units)
                {
                    <option value="@unit.id">@unit.Name</option>
                }
            </select>

            <input type="text" name="new_unit" />
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    $("#type").change(function () {
        if ($(this).val() == 1) {
            $("#unit").css("display", "none");
        }
        else
            $("#unit").css("display", "block");
    })
</script>